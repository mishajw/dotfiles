#!/usr/bin/env bash

cd $HOME
source $HOME/dotfiles/init/scripting.sh

# TODO: Make nicer?
if xrandr | grep "\<connected\>" | grep $DISPLAY2_NAME; then
  SINGLE_DISPLAY="false"
else
  SINGLE_DISPLAY="true"
fi

bspc config border_width 2
bspc config top_padding 0
bspc config split_ratio 0.50
bspc config single_monocle true
bspc config gapless_monocle true
bspc config borderless_monocle $SINGLE_DISPLAY
bspc config remove_disabled_monitors true
bspc config remove_unplugged_monitors true
bspc config normal_border_color '#333333'
bspc config focused_border_color '#F9D3A5'
bspc config initial_polarity second_child
bspc config window_gap 0

bspc config click_to_focus button1
bspc config pointer_modifier control
bspc config pointer_action1 resize_corner
bspc config pointer_action2 resize_side
bspc config pointer_action3 move

# Setup monitors
$DF_PYTHON $scr/setup-displays.py

# Set background
feh --bg-fill $BACKGROUND_IMAGE

# Set rules for panel
bspc rule --add incredi sticky=on border=off layer=above

# Start processes needed for BSPWM
pid_dir=/tmp/dotfiles_pids
mkdir -p $pid_dir
start-process() {
  tag=$1
  comm=$2
  # File containing PID of the running process
  pid_file=$pid_dir/$tag$DISPLAY
  # Kill it if it exists
  if [ -f $pid_file ]; then
    kill_pid=$(cat $pid_file)
    echo "Killing $tag instance at $kill_pid"
    kill $(cat $pid_file)
  fi
  # Start it, writing logs to $dflogs
  eval "$comm \
    >$dflogs/${tag}_stdout$DISPLAY.log \
    2>$dflogs/${tag}_stderr$DISPLAY.log &"
  new_pid=$!
  echo $new_pid >$pid_file
}
start-process incredi "$HOME/.cargo/bin/incredi"
start-process incredi-super-tap "$DF_PYTHON $scr/util/incredi-super-tap.py"
start-process compton "compton"
start-process sxhkd "sxhkd"
